Grammar:

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations IN commands END
Rule 2     declarations -> <empty>
Rule 3     declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON
Rule 4     declarations -> declarations PIDENTIFIER SEMICOLON
Rule 5     commands -> command
Rule 6     commands -> commands command
Rule 7     command -> READ identifier SEMICOLON
Rule 8     command -> WRITE value SEMICOLON
Rule 9     command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
Rule 10    command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
Rule 11    command -> DO commands WHILE condition ENDDO
Rule 12    command -> WHILE condition DO commands ENDWHILE
Rule 13    command -> IF condition THEN commands ENDIF
Rule 14    command -> IF condition THEN commands ELSE commands ENDIF
Rule 15    command -> identifier ASSIGN expression SEMICOLON
Rule 16    expression -> value MODULO value  [precedence=left, level=2]
Rule 17    expression -> value DIVIDE value  [precedence=left, level=2]
Rule 18    expression -> value MULTIPLY value  [precedence=left, level=2]
Rule 19    expression -> value MINUS value  [precedence=left, level=1]
Rule 20    expression -> value PLUS value  [precedence=left, level=1]
Rule 21    expression -> value
Rule 22    condition -> value NOT_EQUAL value
Rule 23    condition -> value EQUAL value
Rule 24    condition -> value LESS_OR_EQUAL value
Rule 25    condition -> value GREATER_OR_EQUAL value
Rule 26    condition -> value LESS_THAN value
Rule 27    condition -> value GREATER_THAN value
Rule 28    value -> NUMBER
Rule 29    value -> identifier
Rule 30    identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
Rule 31    identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
Rule 32    identifier -> PIDENTIFIER

Terminals, with rules where they appear:

ASSIGN               : 15
COLON                : 3
DECLARE              : 1
DIVIDE               : 17
DO                   : 9 10 11 12
DOWNTO               : 9
ELSE                 : 14
END                  : 1
ENDDO                : 11
ENDFOR               : 9 10
ENDIF                : 13 14
ENDWHILE             : 12
EQUAL                : 23
FOR                  : 9 10
FROM                 : 9 10
GREATER_OR_EQUAL     : 25
GREATER_THAN         : 27
IF                   : 13 14
IN                   : 1
LESS_OR_EQUAL        : 24
LESS_THAN            : 26
LPARENTHESIS         : 3 30 31
MINUS                : 19
MODULO               : 16
MULTIPLY             : 18
NOT_EQUAL            : 22
NUMBER               : 3 3 28 30
PIDENTIFIER          : 3 4 9 10 30 31 31 32
PLUS                 : 20
READ                 : 7
RPARENTHESIS         : 3 30 31
SEMICOLON            : 3 4 7 8 15
THEN                 : 13 14
TO                   : 10
WHILE                : 11 12
WRITE                : 8
error                : 

Nonterminals, with rules where they appear:

command              : 5 6
commands             : 1 6 9 10 11 12 13 14 14
condition            : 11 12 13 14
declarations         : 1 3 4
expression           : 15
identifier           : 7 15 29
program              : 0
value                : 8 9 9 10 10 16 16 17 17 18 18 19 19 20 20 21 22 22 23 23 24 24 25 25 26 26 27 27


state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations IN commands END
    DECLARE         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> DECLARE . declarations IN commands END
    (2) declarations -> .
    (3) declarations -> . declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON
    (4) declarations -> . declarations PIDENTIFIER SEMICOLON
    IN              reduce using rule 2 (declarations -> .)
    PIDENTIFIER     reduce using rule 2 (declarations -> .)

    declarations                   shift and go to state 3

state 3

    (1) program -> DECLARE declarations . IN commands END
    (3) declarations -> declarations . PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON
    (4) declarations -> declarations . PIDENTIFIER SEMICOLON
    IN              shift and go to state 4
    PIDENTIFIER     shift and go to state 5


state 4

    (1) program -> DECLARE declarations IN . commands END
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 5

    (3) declarations -> declarations PIDENTIFIER . LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON
    (4) declarations -> declarations PIDENTIFIER . SEMICOLON
    LPARENTHESIS    shift and go to state 16
    SEMICOLON       shift and go to state 17


state 6

    (1) program -> DECLARE declarations IN commands . END
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    END             shift and go to state 18
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 7

    (5) commands -> command .
    END             reduce using rule 5 (commands -> command .)
    READ            reduce using rule 5 (commands -> command .)
    WRITE           reduce using rule 5 (commands -> command .)
    FOR             reduce using rule 5 (commands -> command .)
    DO              reduce using rule 5 (commands -> command .)
    WHILE           reduce using rule 5 (commands -> command .)
    IF              reduce using rule 5 (commands -> command .)
    PIDENTIFIER     reduce using rule 5 (commands -> command .)
    ENDWHILE        reduce using rule 5 (commands -> command .)
    ENDIF           reduce using rule 5 (commands -> command .)
    ELSE            reduce using rule 5 (commands -> command .)
    ENDFOR          reduce using rule 5 (commands -> command .)


state 8

    (7) command -> READ . identifier SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    PIDENTIFIER     shift and go to state 12

    identifier                     shift and go to state 20

state 9

    (15) command -> identifier . ASSIGN expression SEMICOLON
    ASSIGN          shift and go to state 21


state 10

    (8) command -> WRITE . value SEMICOLON
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 22
    identifier                     shift and go to state 24

state 11

    (9) command -> FOR . PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> FOR . PIDENTIFIER FROM value TO value DO commands ENDFOR
    PIDENTIFIER     shift and go to state 25


state 12

    (30) identifier -> PIDENTIFIER . LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> PIDENTIFIER . LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> PIDENTIFIER .
    LPARENTHESIS    shift and go to state 26
    ASSIGN          reduce using rule 32 (identifier -> PIDENTIFIER .)
    SEMICOLON       reduce using rule 32 (identifier -> PIDENTIFIER .)
    NOT_EQUAL       reduce using rule 32 (identifier -> PIDENTIFIER .)
    EQUAL           reduce using rule 32 (identifier -> PIDENTIFIER .)
    LESS_OR_EQUAL   reduce using rule 32 (identifier -> PIDENTIFIER .)
    GREATER_OR_EQUAL reduce using rule 32 (identifier -> PIDENTIFIER .)
    LESS_THAN       reduce using rule 32 (identifier -> PIDENTIFIER .)
    GREATER_THAN    reduce using rule 32 (identifier -> PIDENTIFIER .)
    MODULO          reduce using rule 32 (identifier -> PIDENTIFIER .)
    DIVIDE          reduce using rule 32 (identifier -> PIDENTIFIER .)
    MULTIPLY        reduce using rule 32 (identifier -> PIDENTIFIER .)
    MINUS           reduce using rule 32 (identifier -> PIDENTIFIER .)
    PLUS            reduce using rule 32 (identifier -> PIDENTIFIER .)
    DOWNTO          reduce using rule 32 (identifier -> PIDENTIFIER .)
    TO              reduce using rule 32 (identifier -> PIDENTIFIER .)
    DO              reduce using rule 32 (identifier -> PIDENTIFIER .)
    THEN            reduce using rule 32 (identifier -> PIDENTIFIER .)
    ENDDO           reduce using rule 32 (identifier -> PIDENTIFIER .)


state 13

    (11) command -> DO . commands WHILE condition ENDDO
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 27
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 14

    (12) command -> WHILE . condition DO commands ENDWHILE
    (22) condition -> . value NOT_EQUAL value
    (23) condition -> . value EQUAL value
    (24) condition -> . value LESS_OR_EQUAL value
    (25) condition -> . value GREATER_OR_EQUAL value
    (26) condition -> . value LESS_THAN value
    (27) condition -> . value GREATER_THAN value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    condition                      shift and go to state 28
    value                          shift and go to state 29
    identifier                     shift and go to state 24

state 15

    (13) command -> IF . condition THEN commands ENDIF
    (14) command -> IF . condition THEN commands ELSE commands ENDIF
    (22) condition -> . value NOT_EQUAL value
    (23) condition -> . value EQUAL value
    (24) condition -> . value LESS_OR_EQUAL value
    (25) condition -> . value GREATER_OR_EQUAL value
    (26) condition -> . value LESS_THAN value
    (27) condition -> . value GREATER_THAN value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    condition                      shift and go to state 30
    value                          shift and go to state 29
    identifier                     shift and go to state 24

state 16

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS . NUMBER COLON NUMBER RPARENTHESIS SEMICOLON
    NUMBER          shift and go to state 31


state 17

    (4) declarations -> declarations PIDENTIFIER SEMICOLON .
    IN              reduce using rule 4 (declarations -> declarations PIDENTIFIER SEMICOLON .)
    PIDENTIFIER     reduce using rule 4 (declarations -> declarations PIDENTIFIER SEMICOLON .)


state 18

    (1) program -> DECLARE declarations IN commands END .
    $end            reduce using rule 1 (program -> DECLARE declarations IN commands END .)


state 19

    (6) commands -> commands command .
    END             reduce using rule 6 (commands -> commands command .)
    READ            reduce using rule 6 (commands -> commands command .)
    WRITE           reduce using rule 6 (commands -> commands command .)
    FOR             reduce using rule 6 (commands -> commands command .)
    DO              reduce using rule 6 (commands -> commands command .)
    WHILE           reduce using rule 6 (commands -> commands command .)
    IF              reduce using rule 6 (commands -> commands command .)
    PIDENTIFIER     reduce using rule 6 (commands -> commands command .)
    ENDWHILE        reduce using rule 6 (commands -> commands command .)
    ENDIF           reduce using rule 6 (commands -> commands command .)
    ELSE            reduce using rule 6 (commands -> commands command .)
    ENDFOR          reduce using rule 6 (commands -> commands command .)


state 20

    (7) command -> READ identifier . SEMICOLON
    SEMICOLON       shift and go to state 32


state 21

    (15) command -> identifier ASSIGN . expression SEMICOLON
    (16) expression -> . value MODULO value
    (17) expression -> . value DIVIDE value
    (18) expression -> . value MULTIPLY value
    (19) expression -> . value MINUS value
    (20) expression -> . value PLUS value
    (21) expression -> . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    identifier                     shift and go to state 24
    expression                     shift and go to state 33
    value                          shift and go to state 34

state 22

    (8) command -> WRITE value . SEMICOLON
    SEMICOLON       shift and go to state 35


state 23

    (28) value -> NUMBER .
    SEMICOLON       reduce using rule 28 (value -> NUMBER .)
    NOT_EQUAL       reduce using rule 28 (value -> NUMBER .)
    EQUAL           reduce using rule 28 (value -> NUMBER .)
    LESS_OR_EQUAL   reduce using rule 28 (value -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 28 (value -> NUMBER .)
    LESS_THAN       reduce using rule 28 (value -> NUMBER .)
    GREATER_THAN    reduce using rule 28 (value -> NUMBER .)
    MODULO          reduce using rule 28 (value -> NUMBER .)
    DIVIDE          reduce using rule 28 (value -> NUMBER .)
    MULTIPLY        reduce using rule 28 (value -> NUMBER .)
    MINUS           reduce using rule 28 (value -> NUMBER .)
    PLUS            reduce using rule 28 (value -> NUMBER .)
    DOWNTO          reduce using rule 28 (value -> NUMBER .)
    TO              reduce using rule 28 (value -> NUMBER .)
    DO              reduce using rule 28 (value -> NUMBER .)
    THEN            reduce using rule 28 (value -> NUMBER .)
    ENDDO           reduce using rule 28 (value -> NUMBER .)


state 24

    (29) value -> identifier .
    SEMICOLON       reduce using rule 29 (value -> identifier .)
    NOT_EQUAL       reduce using rule 29 (value -> identifier .)
    EQUAL           reduce using rule 29 (value -> identifier .)
    LESS_OR_EQUAL   reduce using rule 29 (value -> identifier .)
    GREATER_OR_EQUAL reduce using rule 29 (value -> identifier .)
    LESS_THAN       reduce using rule 29 (value -> identifier .)
    GREATER_THAN    reduce using rule 29 (value -> identifier .)
    MODULO          reduce using rule 29 (value -> identifier .)
    DIVIDE          reduce using rule 29 (value -> identifier .)
    MULTIPLY        reduce using rule 29 (value -> identifier .)
    MINUS           reduce using rule 29 (value -> identifier .)
    PLUS            reduce using rule 29 (value -> identifier .)
    DOWNTO          reduce using rule 29 (value -> identifier .)
    TO              reduce using rule 29 (value -> identifier .)
    DO              reduce using rule 29 (value -> identifier .)
    THEN            reduce using rule 29 (value -> identifier .)
    ENDDO           reduce using rule 29 (value -> identifier .)


state 25

    (9) command -> FOR PIDENTIFIER . FROM value DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER . FROM value TO value DO commands ENDFOR
    FROM            shift and go to state 36


state 26

    (30) identifier -> PIDENTIFIER LPARENTHESIS . NUMBER RPARENTHESIS
    (31) identifier -> PIDENTIFIER LPARENTHESIS . PIDENTIFIER RPARENTHESIS
    NUMBER          shift and go to state 38
    PIDENTIFIER     shift and go to state 37


state 27

    (11) command -> DO commands . WHILE condition ENDDO
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    WHILE           shift and go to state 39
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 28

    (12) command -> WHILE condition . DO commands ENDWHILE
    DO              shift and go to state 40


state 29

    (22) condition -> value . NOT_EQUAL value
    (23) condition -> value . EQUAL value
    (24) condition -> value . LESS_OR_EQUAL value
    (25) condition -> value . GREATER_OR_EQUAL value
    (26) condition -> value . LESS_THAN value
    (27) condition -> value . GREATER_THAN value
    NOT_EQUAL       shift and go to state 41
    EQUAL           shift and go to state 42
    LESS_OR_EQUAL   shift and go to state 43
    GREATER_OR_EQUAL shift and go to state 44
    LESS_THAN       shift and go to state 45
    GREATER_THAN    shift and go to state 46


state 30

    (13) command -> IF condition . THEN commands ENDIF
    (14) command -> IF condition . THEN commands ELSE commands ENDIF
    THEN            shift and go to state 47


state 31

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER . COLON NUMBER RPARENTHESIS SEMICOLON
    COLON           shift and go to state 48


state 32

    (7) command -> READ identifier SEMICOLON .
    END             reduce using rule 7 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 7 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 7 (command -> READ identifier SEMICOLON .)
    FOR             reduce using rule 7 (command -> READ identifier SEMICOLON .)
    DO              reduce using rule 7 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 7 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 7 (command -> READ identifier SEMICOLON .)
    PIDENTIFIER     reduce using rule 7 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 7 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 7 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 7 (command -> READ identifier SEMICOLON .)
    ENDFOR          reduce using rule 7 (command -> READ identifier SEMICOLON .)


state 33

    (15) command -> identifier ASSIGN expression . SEMICOLON
    SEMICOLON       shift and go to state 49


state 34

    (16) expression -> value . MODULO value
    (17) expression -> value . DIVIDE value
    (18) expression -> value . MULTIPLY value
    (19) expression -> value . MINUS value
    (20) expression -> value . PLUS value
    (21) expression -> value .
    MODULO          shift and go to state 50
    DIVIDE          shift and go to state 51
    MULTIPLY        shift and go to state 52
    MINUS           shift and go to state 53
    PLUS            shift and go to state 54
    SEMICOLON       reduce using rule 21 (expression -> value .)


state 35

    (8) command -> WRITE value SEMICOLON .
    END             reduce using rule 8 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 8 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 8 (command -> WRITE value SEMICOLON .)
    FOR             reduce using rule 8 (command -> WRITE value SEMICOLON .)
    DO              reduce using rule 8 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 8 (command -> WRITE value SEMICOLON .)
    IF              reduce using rule 8 (command -> WRITE value SEMICOLON .)
    PIDENTIFIER     reduce using rule 8 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 8 (command -> WRITE value SEMICOLON .)
    ENDIF           reduce using rule 8 (command -> WRITE value SEMICOLON .)
    ELSE            reduce using rule 8 (command -> WRITE value SEMICOLON .)
    ENDFOR          reduce using rule 8 (command -> WRITE value SEMICOLON .)


state 36

    (9) command -> FOR PIDENTIFIER FROM . value DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER FROM . value TO value DO commands ENDFOR
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 55
    identifier                     shift and go to state 24

state 37

    (31) identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 56


state 38

    (30) identifier -> PIDENTIFIER LPARENTHESIS NUMBER . RPARENTHESIS
    RPARENTHESIS    shift and go to state 57


state 39

    (11) command -> DO commands WHILE . condition ENDDO
    (12) command -> WHILE . condition DO commands ENDWHILE
    (22) condition -> . value NOT_EQUAL value
    (23) condition -> . value EQUAL value
    (24) condition -> . value LESS_OR_EQUAL value
    (25) condition -> . value GREATER_OR_EQUAL value
    (26) condition -> . value LESS_THAN value
    (27) condition -> . value GREATER_THAN value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    condition                      shift and go to state 58
    value                          shift and go to state 29
    identifier                     shift and go to state 24

state 40

    (12) command -> WHILE condition DO . commands ENDWHILE
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 59
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 41

    (22) condition -> value NOT_EQUAL . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 60
    identifier                     shift and go to state 24

state 42

    (23) condition -> value EQUAL . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 61
    identifier                     shift and go to state 24

state 43

    (24) condition -> value LESS_OR_EQUAL . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 62
    identifier                     shift and go to state 24

state 44

    (25) condition -> value GREATER_OR_EQUAL . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 63
    identifier                     shift and go to state 24

state 45

    (26) condition -> value LESS_THAN . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 64
    identifier                     shift and go to state 24

state 46

    (27) condition -> value GREATER_THAN . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 65
    identifier                     shift and go to state 24

state 47

    (13) command -> IF condition THEN . commands ENDIF
    (14) command -> IF condition THEN . commands ELSE commands ENDIF
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 66
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 48

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON . NUMBER RPARENTHESIS SEMICOLON
    NUMBER          shift and go to state 67


state 49

    (15) command -> identifier ASSIGN expression SEMICOLON .
    END             reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    DO              reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    PIDENTIFIER     reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDFOR          reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)


state 50

    (16) expression -> value MODULO . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 68
    identifier                     shift and go to state 24

state 51

    (17) expression -> value DIVIDE . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 69
    identifier                     shift and go to state 24

state 52

    (18) expression -> value MULTIPLY . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 70
    identifier                     shift and go to state 24

state 53

    (19) expression -> value MINUS . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 71
    identifier                     shift and go to state 24

state 54

    (20) expression -> value PLUS . value
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 72
    identifier                     shift and go to state 24

state 55

    (9) command -> FOR PIDENTIFIER FROM value . DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER FROM value . TO value DO commands ENDFOR
    DOWNTO          shift and go to state 73
    TO              shift and go to state 74


state 56

    (31) identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .
    ASSIGN          reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    SEMICOLON       reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    NOT_EQUAL       reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    EQUAL           reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    LESS_OR_EQUAL   reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    GREATER_OR_EQUAL reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    LESS_THAN       reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    GREATER_THAN    reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MODULO          reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DIVIDE          reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MULTIPLY        reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    MINUS           reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    PLUS            reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DOWNTO          reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    TO              reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    DO              reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    THEN            reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)
    ENDDO           reduce using rule 31 (identifier -> PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS .)


state 57

    (30) identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .
    ASSIGN          reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    SEMICOLON       reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    NOT_EQUAL       reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    EQUAL           reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    LESS_OR_EQUAL   reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    GREATER_OR_EQUAL reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    LESS_THAN       reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    GREATER_THAN    reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MODULO          reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DIVIDE          reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MULTIPLY        reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    MINUS           reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    PLUS            reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DOWNTO          reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    TO              reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    DO              reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    THEN            reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)
    ENDDO           reduce using rule 30 (identifier -> PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS .)


state 58

    (11) command -> DO commands WHILE condition . ENDDO
    (12) command -> WHILE condition . DO commands ENDWHILE
    ENDDO           shift and go to state 75
    DO              shift and go to state 40


state 59

    (12) command -> WHILE condition DO commands . ENDWHILE
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    ENDWHILE        shift and go to state 76
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 60

    (22) condition -> value NOT_EQUAL value .
    DO              reduce using rule 22 (condition -> value NOT_EQUAL value .)
    THEN            reduce using rule 22 (condition -> value NOT_EQUAL value .)
    ENDDO           reduce using rule 22 (condition -> value NOT_EQUAL value .)


state 61

    (23) condition -> value EQUAL value .
    DO              reduce using rule 23 (condition -> value EQUAL value .)
    THEN            reduce using rule 23 (condition -> value EQUAL value .)
    ENDDO           reduce using rule 23 (condition -> value EQUAL value .)


state 62

    (24) condition -> value LESS_OR_EQUAL value .
    DO              reduce using rule 24 (condition -> value LESS_OR_EQUAL value .)
    THEN            reduce using rule 24 (condition -> value LESS_OR_EQUAL value .)
    ENDDO           reduce using rule 24 (condition -> value LESS_OR_EQUAL value .)


state 63

    (25) condition -> value GREATER_OR_EQUAL value .
    DO              reduce using rule 25 (condition -> value GREATER_OR_EQUAL value .)
    THEN            reduce using rule 25 (condition -> value GREATER_OR_EQUAL value .)
    ENDDO           reduce using rule 25 (condition -> value GREATER_OR_EQUAL value .)


state 64

    (26) condition -> value LESS_THAN value .
    DO              reduce using rule 26 (condition -> value LESS_THAN value .)
    THEN            reduce using rule 26 (condition -> value LESS_THAN value .)
    ENDDO           reduce using rule 26 (condition -> value LESS_THAN value .)


state 65

    (27) condition -> value GREATER_THAN value .
    DO              reduce using rule 27 (condition -> value GREATER_THAN value .)
    THEN            reduce using rule 27 (condition -> value GREATER_THAN value .)
    ENDDO           reduce using rule 27 (condition -> value GREATER_THAN value .)


state 66

    (13) command -> IF condition THEN commands . ENDIF
    (14) command -> IF condition THEN commands . ELSE commands ENDIF
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    ENDIF           shift and go to state 77
    ELSE            shift and go to state 78
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 67

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER . RPARENTHESIS SEMICOLON
    RPARENTHESIS    shift and go to state 79


state 68

    (16) expression -> value MODULO value .
    SEMICOLON       reduce using rule 16 (expression -> value MODULO value .)


state 69

    (17) expression -> value DIVIDE value .
    SEMICOLON       reduce using rule 17 (expression -> value DIVIDE value .)


state 70

    (18) expression -> value MULTIPLY value .
    SEMICOLON       reduce using rule 18 (expression -> value MULTIPLY value .)


state 71

    (19) expression -> value MINUS value .
    SEMICOLON       reduce using rule 19 (expression -> value MINUS value .)


state 72

    (20) expression -> value PLUS value .
    SEMICOLON       reduce using rule 20 (expression -> value PLUS value .)


state 73

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO . value DO commands ENDFOR
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 80
    identifier                     shift and go to state 24

state 74

    (10) command -> FOR PIDENTIFIER FROM value TO . value DO commands ENDFOR
    (28) value -> . NUMBER
    (29) value -> . identifier
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 12

    value                          shift and go to state 81
    identifier                     shift and go to state 24

state 75

    (11) command -> DO commands WHILE condition ENDDO .
    END             reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    READ            reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    WRITE           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    FOR             reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    DO              reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    WHILE           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    IF              reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    PIDENTIFIER     reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDWHILE        reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDIF           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ELSE            reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDFOR          reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)


state 76

    (12) command -> WHILE condition DO commands ENDWHILE .
    END             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    FOR             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    DO              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    PIDENTIFIER     reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDFOR          reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)


state 77

    (13) command -> IF condition THEN commands ENDIF .
    END             reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    FOR             reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    DO              reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    PIDENTIFIER     reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ENDFOR          reduce using rule 13 (command -> IF condition THEN commands ENDIF .)


state 78

    (14) command -> IF condition THEN commands ELSE . commands ENDIF
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 82
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 79

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS . SEMICOLON
    SEMICOLON       shift and go to state 83


state 80

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value . DO commands ENDFOR
    DO              shift and go to state 84


state 81

    (10) command -> FOR PIDENTIFIER FROM value TO value . DO commands ENDFOR
    DO              shift and go to state 85


state 82

    (14) command -> IF condition THEN commands ELSE commands . ENDIF
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    ENDIF           shift and go to state 86
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 83

    (3) declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON .
    IN              reduce using rule 3 (declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON .)
    PIDENTIFIER     reduce using rule 3 (declarations -> declarations PIDENTIFIER LPARENTHESIS NUMBER COLON NUMBER RPARENTHESIS SEMICOLON .)


state 84

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO . commands ENDFOR
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 87
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 85

    (10) command -> FOR PIDENTIFIER FROM value TO value DO . commands ENDFOR
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    commands                       shift and go to state 88
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 86

    (14) command -> IF condition THEN commands ELSE commands ENDIF .
    END             reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    FOR             reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    DO              reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    PIDENTIFIER     reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDFOR          reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 87

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands . ENDFOR
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 89
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 88

    (10) command -> FOR PIDENTIFIER FROM value TO value DO commands . ENDFOR
    (6) commands -> commands . command
    (7) command -> . READ identifier SEMICOLON
    (8) command -> . WRITE value SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPARENTHESIS NUMBER RPARENTHESIS
    (31) identifier -> . PIDENTIFIER LPARENTHESIS PIDENTIFIER RPARENTHESIS
    (32) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 90
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    FOR             shift and go to state 11
    DO              shift and go to state 13
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    PIDENTIFIER     shift and go to state 12

    command                        shift and go to state 19
    identifier                     shift and go to state 9

state 89

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .
    END             reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    READ            reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WRITE           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    FOR             reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    DO              reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WHILE           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    IF              reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDIF           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ELSE            reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)


state 90

    (10) command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .
    END             reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    READ            reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WRITE           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    FOR             reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    DO              reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WHILE           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    IF              reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDIF           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ELSE            reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
